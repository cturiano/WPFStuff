<views:BasePage x:TypeArguments="viewModels:ChatMessageListViewModel" x:Class="Chat.Views.ChatPage"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:views="clr-namespace:Chat.Views"
                xmlns:viewModels="clr-namespace:Chat.Core.ViewModels;assembly=Chat.Core"
                xmlns:controls="clr-namespace:Chat.Controls"
                xmlns:designViewModels="clr-namespace:Chat.Core.ViewModels.DesignViewModels;assembly=Chat.Core"
                xmlns:attachedProperties="clr-namespace:Chat.AttachedProperties"
                xmlns:converters="clr-namespace:Chat.Converters"
                x:Name="Chat"
                mc:Ignorable="d"
                d:DesignWidth="500">

   <Border>
      <Grid>
         <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
         </Grid.RowDefinitions>

         <Border Grid.RowSpan="3"
                 Panel.ZIndex="1"
                 Background="Transparent"
                 Visibility="{Binding AnyPopupVisible, Converter={converters:BoolToVisibilityConverter}, ConverterParameter=False}">
            <Border.InputBindings>
               <MouseBinding MouseAction="LeftClick" Command="{Binding PopupHideCommand}" />
            </Border.InputBindings>
         </Border>

         <Grid Height="50" Grid.Row="0" Background="Transparent">
            <Grid.ColumnDefinitions>
               <ColumnDefinition Width="Auto" />
               <ColumnDefinition Width="*" />
               <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.ColumnSpan="3"
                       Text="Hello"
                       Foreground="{StaticResource ForegroundDarkBrush}"
                       FontSize="{StaticResource FontSizeXLarge}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center" />

            <StackPanel Orientation="Horizontal"
                        Grid.Column="2"
                        HorizontalAlignment="Left">
               <Button Style="{StaticResource IconGrowButton}"
                       Content="{StaticResource FontAwesomeSearchIcon}" />
               <Button Style="{StaticResource IconGrowButton}"
                       Content="{StaticResource FontAwesomeHamburgerIcon}" />
            </StackPanel>
         </Grid>

         <Border Grid.Row="1">
            <controls:ChatMessageListControl x:Name="ChatMessageList"
                                             d:DataContext="{x:Static designViewModels:ChatMessageListDesignViewModel.Instance}" />
         </Border>

         <Border Grid.Row="1"
                 Panel.ZIndex="2"
                 Visibility="Hidden"
                 VerticalAlignment="Bottom"
                 HorizontalAlignment="Left"
                 attachedProperties:AnimateSlideInFromBottomProperty.Value="{Binding AttachmentMenuVisible}">

            <controls:BubbleContent DataContext="{Binding AttachmentViewModel}" />
         </Border>

         <Border Grid.Row="1"
                 Panel.ZIndex="2"
                 Visibility="Hidden"
                 VerticalAlignment="Bottom"
                 HorizontalAlignment="Right"
                 Margin="0 0 65 0"
                 attachedProperties:AnimateSlideInFromBottomProperty.Value="{Binding EmojiMenuVisible}">

            <controls:BubbleContent DataContext="{Binding EmojiViewModel}" />
         </Border> 

         <Grid Grid.Row="2"
               Panel.ZIndex="3"
               MinHeight="50"
               MaxHeight="128"
               Background="{StaticResource BackgroundLightBrush}">

            <Grid.ColumnDefinitions>
               <ColumnDefinition Width="Auto" />
               <ColumnDefinition Width="*" />
               <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button VerticalAlignment="Top"
                    Height="{Binding MinHeight, RelativeSource={RelativeSource AncestorType=Grid}}"
                    Style="{StaticResource IconGrowButton}"
                    Foreground="{StaticResource ForegroundVeryDarkBrush}"
                    Content="{StaticResource FontAwesomeAttachIcon}"
                    Command="{Binding AttachCommand}" />

            <TextBox Grid.Column="1"
                     x:Name="MessageText"
                     VerticalAlignment="Center"
                     FontSize="{StaticResource FontSizeRegular}"
                     Text="{Binding PendingMessageText, UpdateSourceTrigger=PropertyChanged}"
                     Tag="Write a message"
                     Padding="0"
                     BorderThickness="0"
                     PreviewKeyDown="MessageText_OnPreviewKeyDown"
                     AcceptsTab="True"
                     AcceptsReturn="True"
                     VerticalScrollBarVisibility="Auto"
                     attachedProperties:IsFocusedProperty.Value="True"/>

            <StackPanel Grid.Column="2"
                        Margin="0 0 5 0"
                        Orientation="Horizontal"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Left">

               <Button Height="{Binding MinHeight, RelativeSource={RelativeSource AncestorType=Grid}}"
                       Margin="0 0 5 0"
                       Style="{StaticResource IconGrowButton}"
                       Foreground="{StaticResource ForegroundVeryDarkBrush}"
                       Content="{StaticResource FontAwesomeEmojiIcon}"
                       Command="{Binding ShowEmojiCommand}" />

               <Button Style="{StaticResource BaseButton}"
                       Padding="10 0" 
                       Focusable="False"
                       FontSize="{StaticResource FontSizeRegular}"
                       Background="{StaticResource TitleGreenBrush}"
                       Content="Send"  
                       IsDefault="True"
                       Command="{Binding SendCommand}"/>

            </StackPanel>

         </Grid>
      </Grid>
   </Border>
</views:BasePage>