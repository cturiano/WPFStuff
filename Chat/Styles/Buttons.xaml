<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Chat"
                    xmlns:attachedProperties="clr-namespace:Chat.AttachedProperties"
                    xmlns:converters="clr-namespace:Chat.Converters">
   <ResourceDictionary.MergedDictionaries>
      <ResourceDictionary Source="Colors.xaml" />
      <ResourceDictionary Source="Fonts.xaml" />
      <ResourceDictionary Source="Texts.xaml" />
   </ResourceDictionary.MergedDictionaries>

   <Style TargetType="{x:Type Button}" x:Key="Hoverless">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
               <Grid Background="{TemplateBinding Background}">
                  <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                     <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                  </Border>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style TargetType="{x:Type Button}" BasedOn="{StaticResource Hoverless}" x:Key="SystemIconButton">
      <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
      <Setter Property="Padding" Value="8" />
   </Style>

   <Style TargetType="{x:Type Button}" x:Key="WindowControlButton" BasedOn="{StaticResource BaseStyle}">
      <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Padding" Value="5" />
      <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}" />
      <Setter Property="LayoutTransform">
         <Setter.Value>
            <ScaleTransform ScaleX="1.5" />
         </Setter.Value>
      </Setter>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
               <Grid Background="{TemplateBinding Background}">
                  <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                     <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" />
                  </Border>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
      <Style.Triggers>
         <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}" />
         </Trigger>
      </Style.Triggers>
   </Style>

   <Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">
      <Style.Triggers>
         <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="{StaticResource ForegroundDarkBrush}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundVeryLightBrush}" />
         </Trigger>
      </Style.Triggers>
   </Style>

   <Style x:Key="BaseButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
      <Setter Property="Background" Value="{StaticResource TitleOrangeBrush}" />
      <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="FontSize" Value="{StaticResource FontSizeHuge}" />
      <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
      <Setter Property="Padding" Value="50 10" />
      <Setter Property="Margin" Value="0 10" />
      <Setter Property="attachedProperties:IsBusyProperty.Value" Value="False" />

      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ButtonBase}">
               <Border x:Name="border"
                       BorderBrush="{TemplateBinding BorderBrush}"
                       BorderThickness="{TemplateBinding BorderThickness}"
                       Background="{TemplateBinding Background}"
                       SnapsToDevicePixels="True"
                       CornerRadius="10">
                  <Grid>
                     <TextBlock x:Name="contentPresenter"
                                Visibility="{TemplateBinding attachedProperties:IsBusyProperty.Value, Converter={converters:BoolToVisibilityConverter}}"
                                Text="{TemplateBinding Content}"
                                Focusable="False"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Margin="{TemplateBinding Padding}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />

                     <TextBlock Style="{StaticResource SpinningText}"
                                FontSize="{TemplateBinding FontSize}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Visibility="{TemplateBinding attachedProperties:IsBusyProperty.Value, Converter={converters:BoolToVisibilityConverter}, ConverterParameter=True}" />
                  </Grid>
               </Border>
               <ControlTemplate.Triggers>
                  <EventTrigger RoutedEvent="MouseEnter">
                     <BeginStoryboard>
                        <Storyboard>
                           <ColorAnimation To="{StaticResource TitleBlue}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                        </Storyboard>
                     </BeginStoryboard>
                  </EventTrigger>
                  <EventTrigger RoutedEvent="MouseLeave">
                     <BeginStoryboard>
                        <Storyboard>
                           <ColorAnimation From="{StaticResource TitleBlue}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                        </Storyboard>
                     </BeginStoryboard>
                  </EventTrigger>
                  <Trigger Property="IsEnabled" Value="False">
                     <Setter Property="Background" TargetName="border" Value="{StaticResource ForegroundDarkBrush}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="TextButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}" />

      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ButtonBase}">
               <Border x:Name="border"
                       BorderBrush="{TemplateBinding BorderBrush}"
                       BorderThickness="{TemplateBinding BorderThickness}"
                       Background="{TemplateBinding Background}"
                       SnapsToDevicePixels="True"
                       CornerRadius="10">
                  <TextBlock x:Name="contentPresenter"
                             Text="{TemplateBinding Content}"
                             Focusable="False"
                             FontFamily="{TemplateBinding FontFamily}"
                             FontSize="{TemplateBinding FontSize}"
                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                             Margin="{TemplateBinding Padding}"
                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
               </Border>
               <ControlTemplate.Triggers>
                  <EventTrigger RoutedEvent="MouseEnter">
                     <BeginStoryboard>
                        <Storyboard>
                           <ColorAnimation To="{StaticResource TitleOrange}"
                                           Duration="0:0:0.3"
                                           Storyboard.TargetName="contentPresenter"
                                           Storyboard.TargetProperty="Foreground.Color" />
                        </Storyboard>
                     </BeginStoryboard>
                  </EventTrigger>
                  <EventTrigger RoutedEvent="MouseLeave">
                     <BeginStoryboard>
                        <Storyboard>
                           <ColorAnimation To="{StaticResource ForegroundLight}"
                                           Duration="0:0:0.3"
                                           Storyboard.TargetName="contentPresenter"
                                           Storyboard.TargetProperty="Foreground.Color" />
                        </Storyboard>
                     </BeginStoryboard>
                  </EventTrigger>
                  <Trigger Property="IsEnabled" Value="False">
                     <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="IconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
      <Setter Property="Background" Value="{StaticResource TitleTransparentBlueBrush}" />
      <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="FontSize" Value="{StaticResource FontSizeHuge}" />
      <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
      <Setter Property="Padding" Value="10" />
      <Setter Property="Margin" Value="0" />
      <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />

      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ButtonBase}">
               <Border x:Name="border"
                       BorderBrush="{TemplateBinding BorderBrush}"
                       BorderThickness="{TemplateBinding BorderThickness}"
                       Background="{TemplateBinding Background}"
                       SnapsToDevicePixels="True">
                  <Grid>
                     <Viewbox VerticalAlignment="Center">
                        <TextBlock x:Name="contentPresenter"
                                   Text="{TemplateBinding Content}"
                                   Focusable="False"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   Margin="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                     </Viewbox>
                  </Grid>
               </Border>
               <ControlTemplate.Triggers>
                  <EventTrigger RoutedEvent="MouseEnter">
                     <BeginStoryboard>
                        <Storyboard>
                           <ColorAnimation To="{StaticResource TitleLightBlue}"
                                           Duration="0:0:0.3" Storyboard.TargetName="border"
                                           Storyboard.TargetProperty="Background.Color" />
                        </Storyboard>
                     </BeginStoryboard>
                  </EventTrigger>
                  <EventTrigger RoutedEvent="MouseLeave">
                     <BeginStoryboard>
                        <Storyboard>
                           <ColorAnimation To="{StaticResource TitleTransparentBlue}"
                                           Duration="0:0:0.3" Storyboard.TargetName="border"
                                           Storyboard.TargetProperty="Background.Color" />
                        </Storyboard>
                     </BeginStoryboard>
                  </EventTrigger>
                  <Trigger Property="IsEnabled" Value="False">
                     <Setter Property="Background"
                             TargetName="border"
                             Value="{StaticResource ForegroundDarkBrush}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="IconGrowButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
      <Setter Property="Background" Value="{StaticResource TitleTransparentBlueBrush}" />
      <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="FontSize" Value="{StaticResource FontSizeHuge}" />
      <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
      <Setter Property="Padding" Value="10" />
      <Setter Property="Margin" Value="0" />
      <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />

      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ButtonBase}">
               <Border x:Name="border"
                       BorderBrush="{TemplateBinding BorderBrush}"
                       BorderThickness="{TemplateBinding BorderThickness}"
                       Background="{TemplateBinding Background}"
                       SnapsToDevicePixels="True">

                  <Border.RenderTransform>
                     <ScaleTransform />
                  </Border.RenderTransform>
                  
                  <Border.RenderTransformOrigin>
                     <Point X=".5" Y=".5" />
                  </Border.RenderTransformOrigin>

                  <Grid>
                     <Viewbox VerticalAlignment="Center">

                        <TextBlock x:Name="contentPresenter"
                                   Text="{TemplateBinding Content}"
                                   Focusable="False"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   Margin="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                     </Viewbox>
                  </Grid>
               </Border>
               <ControlTemplate.Triggers>
                  <EventTrigger RoutedEvent="MouseEnter">
                     <BeginStoryboard>
                        <Storyboard>
                           <DoubleAnimation To="1.4"
                                            Duration="0:0:0.2" Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                           
                           <DoubleAnimation To="1.4"
                                            Duration="0:0:0.2" Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                        </Storyboard>
                     </BeginStoryboard>
                  </EventTrigger>  

                  <EventTrigger RoutedEvent="MouseLeave">
                     <BeginStoryboard>
                        <Storyboard>    
                           <DoubleAnimation To="1"
                                            Duration="0:0:0.2" Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                           
                           <DoubleAnimation To="1"
                                            Duration="0:0:0.2" Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                        </Storyboard>
                     </BeginStoryboard>
                  </EventTrigger>
                  <Trigger Property="IsEnabled" Value="False">
                     <Setter Property="Background"
                             TargetName="border"
                             Value="{StaticResource ForegroundDarkBrush}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

</ResourceDictionary>